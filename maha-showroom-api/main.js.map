{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/maha-showroom-api/src/app/app.controller.ts","webpack:///./apps/maha-showroom-api/src/app/app.module.ts","webpack:///./apps/maha-showroom-api/src/app/app.service.ts","webpack:///./apps/maha-showroom-api/src/app/db-mongo-config.ts","webpack:///./apps/maha-showroom-api/src/app/websockets/ws-controller.service.ts","webpack:///./apps/maha-showroom-api/src/main.ts","webpack:///./libs/api-interfaces/src/index.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"@nestjs/websockets\"","webpack:///external \"path\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\"","webpack:///external \"socket.io\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// require() chunk loading for javascript\n\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] !== 0) {\n \t\t\tvar chunk = require(\"./\" + chunkId + \".main.js\");\n \t\t\tvar moreModules = chunk.modules, chunkIds = chunk.ids;\n \t\t\tfor(var moduleId in moreModules) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t\tfor(var i = 0; i < chunkIds.length; i++)\n \t\t\t\tinstalledChunks[chunkIds[i]] = 0;\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { IMessage, IProduct } from '@dimaha/api-interfaces';\nimport { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\nconst mockPromise = import((`./data/products-mock.json`)).then(m => m.default);\n\n@Controller()\nexport class AppController {\n  constructor (private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData (): IMessage {\n    return this.appService.getData();\n  }\n\n  @Get('products')\n  getProductsMock (): Promise<IProduct[]> {\n    return mockPromise;\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { join } from 'path';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { dbMongoConfig } from './db-mongo-config';\nimport { DmWsGatewayService } from './websockets/ws-controller.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(dbMongoConfig),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'assets'),\n      serveStaticOptions: {\n        index: false,\n      },\n    }),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    DmWsGatewayService,\n  ],\n})\nexport class AppModule {}\n","import { IMessage } from '@dimaha/api-interfaces';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData (): IMessage {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import { TypeOrmModuleOptions } from '@nestjs/typeorm/dist/interfaces/typeorm-options.interface';\n\n/*\n https://typeorm.io/#/connection-options/mongodb-connection-options\n */\n\nexport const dbMongoConfig: TypeOrmModuleOptions = {\n  type: 'mongodb',\n  // url: 'mongodb://localhost/showroom-db:27017', // Connection url where perform connection to. Please note that other connection options will override parameters set from url.\n  // host: '', // Database host.\n  // port: '', // Database host port. Default mongodb port is 27017.\n  database: 'showroom-db', // Database name.\n  // poolSize: '', // Set the maximum pool size for each individual server or proxy connection.\n  // ssl: '', // Use ssl connection (needs to have a mongod server with ssl support). Default: false.\n  // sslValidate: '', // Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher). Default: true.\n  // sslCA: '', // Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher).\n  // sslCert: '', // String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n  // sslKey: '', // String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\n  // sslPass: '', // String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher).\n  // autoReconnect: '', // Reconnect on error. Default: true.\n  // noDelay: '', // TCP Socket NoDelay option. Default: true.\n  // keepAlive: '', // The number of milliseconds to wait before initiating keepAlive on the TCP socket. Default: 30000.\n  // connectTimeoutMS: '', // TCP Connection timeout setting. Default: 30000.\n  // socketTimeoutMS: '', // TCP Socket timeout setting. Default: 360000.\n  // reconnectTries: '', // Server attempt to reconnect #times. Default: 30.\n  // reconnectInterval: '', // Server will wait #milliseconds between retries. Default: 1000.\n  // ha: '', // Turn on high availability monitoring. Default: true.\n  // haInterval: '', // Time between each replicaset status check. Default: 10000,5000.\n  // replicaSet: '', // The name of the replicaset to connect to.\n  // acceptableLatencyMS: '', // Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms). Default: 15.\n  // secondaryAcceptableLatencyMS: '', // Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms). Default: 15.\n  // connectWithNoPrimary: '', // Sets if the driver should connect even if no primary is available. Default: false.\n  // authSource: '', // If the database authentication is dependent on another databaseName.\n  // w: '', // The write concern.\n  // wtimeout: '', // The write concern timeout value.\n  // j: '', // Specify a journal write concern. Default: false.\n  // forceServerObjectId: '', // Force server to assign _id values instead of driver. Default: false.\n  // serializeFunctions: '', // Serialize functions on any object. Default: false.\n  // ignoreUndefined: '', // Specify if the BSON serializer should ignore undefined fields. Default: false.\n  // raw: '', // Return document results as raw BSON buffers. Default: false.\n  // promoteLongs: '', // Promotes Long values to number if they fit inside the 53 bits resolution. Default: true.\n  // promoteBuffers: '', // Promotes Binary BSON values to native Node Buffers. Default: false.\n  // promoteValues: '', // Promotes BSON values to native types where possible, set to false to only receive wrapper types. Default: true.\n  // domainsEnabled: '', // Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit. Default: false.\n  // bufferMaxEntries: '', // Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\n  // readPreference: '', // The preferred read preference.\n  // ReadPreference.PRIMARY\n  // ReadPreference.PRIMARY_PREFERRED\n  // ReadPreference.SECONDARY\n  // ReadPreference.SECONDARY_PREFERRED\n  // ReadPreference.NEAREST\n  // pkFactory: '', // A primary key factory object for generation of custom _id keys.\n  // promiseLibrary: '', // A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible.\n  // readConcern: '', // Specify a read concern for the collection. (only MongoDB 3.2 or higher supported).\n  // maxStalenessSeconds: '', // Specify a maxStalenessSeconds value for secondary reads, minimum is 90 seconds.\n  // appname: '', // The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n  // loggerLevel: '', // Specify the log level used by the driver logger (error/warn/info/debug).\n  // logger: '', // Specify a customer logger mechanism, can be used to log using your app level logger.\n  // authMechanism: '' // Sets the authentication mechanism that MongoDB will use to authenticate the connection.\n};\n","import {\n  ConnectedSocket,\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  OnGatewayInit,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse,\n} from '@nestjs/websockets';\nimport { timer, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Server, Socket } from 'socket.io';\n\n@WebSocketGateway()\nexport class DmWsGatewayService implements OnGatewayInit, OnGatewayConnection, OnGatewayDisconnect {\n  @WebSocketServer()\n  server: Server;\n\n  @SubscribeMessage('events')\n  handleEvent (\n    @MessageBody() data: string,\n    @ConnectedSocket() client: Socket,\n  ): Observable<WsResponse<number>> {\n    console.log('[WS: handleEvent]', data);\n\n    /*\n    Returned value will be emitted just once,\n      to respond with queue - stream with WsResponse have to be returned\n     */\n\n    return timer(0, 1000)\n      .pipe(\n        map(count => ({ event: 'events', data: count }))\n        , take(6),\n      );\n  }\n\n  afterInit (server: any): any {\n    console.log('[WS: afterInit]');\n  }\n\n  handleConnection (client: any, ...args: any[]): any {\n    console.log('[WS: handleConnection]');\n  }\n\n  handleDisconnect (client: any): any {\n    console.log('[WS: handleDisconnect]');\n  }\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap () {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","export * from './lib/api-interfaces';\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"@nestjs/websockets\");","module.exports = require(\"path\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"socket.io\");","module.exports = require(\"tslib\");"],"sourceRoot":""}