{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/address-form/address-form.component.ts","./src/app/address-form/address-form.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/drag-drop/drag-drop.component.ts","./src/app/drag-drop/drag-drop.component.html","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/palette/palette.component.ts","./src/app/palette/palette.component.html","./src/app/products/products.component.ts","./src/app/products/products.component.html","./src/app/services/theme.service.ts","./src/app/table/table-datasource.ts","./src/app/table/table.component.ts","./src/app/table/table.component.html","./src/app/tree/example-data.ts","./src/app/tree/tree.component.ts","./src/app/tree/tree.component.html","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'dm-address-form',\n  templateUrl: './address-form.component.html',\n  styleUrls: ['./address-form.component.css'],\n})\nexport class AddressFormComponent {\n  addressForm = this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)]),\n    ],\n    shipping: ['free', Validators.required],\n  });\n\n  hasUnitNumber = false;\n\n  states = [\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'},\n  ];\n\n  constructor (private fb: FormBuilder) {}\n\n  onSubmit () {\n    alert('Thanks!');\n  }\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Shipping Information</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\n              First name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\n              Last name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\n              Address is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\n        <div class=\"col\">\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\n            + Add C/O, Apt, Suite, Unit\n          </button>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"City\" formControlName=\"city\">\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\n              City is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <mat-select placeholder=\"State\" formControlName=\"state\">\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\n                {{ state.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\n              State is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-radio-group formControlName=\"shipping\">\n            <mat-radio-button value=\"free\">Free Shipping</mat-radio-button>\n            <mat-radio-button value=\"priority\">Priority Shipping</mat-radio-button>\n            <mat-radio-button value=\"nextday\">Next Day Shipping</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { PaletteComponent } from './palette/palette.component';\nimport { ProductsComponent } from './products/products.component';\n\nconst routes: Route[] = [\n  {\n    path: '',\n    component: PaletteComponent,\n  },\n  {\n    path: 'products',\n    component: ProductsComponent,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      enableTracing: true,\n      scrollPositionRestoration: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { UntilDestroy } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: 'dm-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  ngOnDestroy (): void {\n  }\n\n  ngOnInit (): void {\n  }\n}\n","<dm-layout>\n\n  <router-outlet></router-outlet>\n\n</dm-layout>\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { AddressFormComponent } from './address-form/address-form.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DragDropComponent } from './drag-drop/drag-drop.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { PaletteComponent } from './palette/palette.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ThemeService } from './services/theme.service';\nimport { TableComponent } from './table/table.component';\nimport { TreeComponent } from './tree/tree.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NoopAnimationsModule,\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTooltipModule,\n    LayoutModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTreeModule,\n    DragDropModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    AppRoutingModule,\n    // ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddressFormComponent,\n    NavigationComponent,\n    TableComponent,\n    TreeComponent,\n    DragDropComponent,\n    PaletteComponent,\n    ProductsComponent,\n    LayoutComponent,\n  ],\n  providers: [\n    ThemeService,\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'dm-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 },\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 },\n      ];\n    }),\n  );\n\n  constructor (private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\" class=\"more-button\" mat-icon-button>\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>Card Content Here</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { moveItemInArray, transferArrayItem, CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'dm-drag-drop',\n  templateUrl: './drag-drop.component.html',\n  styleUrls: ['./drag-drop.component.css'],\n})\nexport class DragDropComponent {\n  todo = [\n    'Get to work',\n    'Pick up groceries',\n    'Go home',\n    'Fall asleep',\n  ];\n\n  done = [\n    'Get up',\n    'Brush teeth',\n    'Take a shower',\n    'Check e-mail',\n    'Walk dog',\n  ];\n\n  drop (event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>To do</h2>\n\n  <div cdkDropList #todoList=\"cdkDropList\" [cdkDropListData]=\"todo\"\n      [cdkDropListConnectedTo]=\"doneList\" class=\"list\" (cdkDropListDropped)=\"drop($event)\">\n    <div class=\"list-item\" *ngFor=\"let item of todo\" cdkDrag>{{item}}</div>\n  </div>\n</div>\n\n<div class=\"container\">\n  <h2>Done</h2>\n\n  <div cdkDropList #doneList=\"cdkDropList\" [cdkDropListData]=\"done\"\n      [cdkDropListConnectedTo]=\"todoList\" class=\"list\" (cdkDropListDropped)=\"drop($event)\">\n    <div class=\"list-item\" *ngFor=\"let item of done\" cdkDrag>{{item}}</div>\n  </div>\n</div>\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { DM_THEME_MODE, ThemeService } from '../services/theme.service';\n\n@Component({\n  selector: 'dm-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutComponent implements OnInit, OnDestroy {\n  DM_THEME_MODE: typeof DM_THEME_MODE = DM_THEME_MODE;\n\n  title = 'first';\n\n  mobileQuery: MediaQueryList;\n\n  fillerNav = Array.from({ length: 10 }, (_, i) => `Nav Item ${i + 1}`);\n\n  opened = true;\n  @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n  private readonly _mobileQueryListener: () => void;\n\n  constructor (\n    private httpClient: HttpClient,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher,\n    private themeService: ThemeService,\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addEventListener('change', this._mobileQueryListener);\n  }\n\n  ngOnInit () {\n    console.log(window.innerWidth);\n    if (window.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = true;\n    }\n  }\n\n  @HostListener('window:resize', ['$event']) onResize (event) {\n    if (event.target.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = true;\n    }\n  }\n\n  isBiggerScreen () {\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    if (width < 768) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  ngOnDestroy (): void {\n    this.mobileQuery.removeEventListener('change', this._mobileQueryListener);\n  }\n\n  setTheme (mode: DM_THEME_MODE) {\n    this.themeService.setMode(mode);\n  }\n}\n","<mat-toolbar class=\"example-toolbar mat-elevation-z6\">\n  <mat-toolbar-row>\n    <button routerLink=\"/\" mat-button>\n      <mat-icon>group_work</mat-icon>\n      <h1 class=\"example-app-name\">Example</h1>\n    </button>\n\n    <a mat-button routerLink=\"/products\">Products</a>\n\n    <!--    <button mat-button [matMenuTriggerFor]=\"animals\" matTooltip=\"Info about the action\"-->\n    <!--            aria-label=\"Button that displays a tooltip when focused or hovered over\">Animal index-->\n    <!--    </button>-->\n\n    <!--    <mat-menu #animals=\"matMenu\">-->\n    <!--      <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Vertebrates</button>-->\n    <!--      <button mat-menu-item [matMenuTriggerFor]=\"invertebrates\">Invertebrates</button>-->\n    <!--    </mat-menu>-->\n\n    <!--    <mat-menu #vertebrates=\"matMenu\">-->\n    <!--      <button mat-menu-item [matMenuTriggerFor]=\"fish\">Fishes</button>-->\n    <!--      <button mat-menu-item [matMenuTriggerFor]=\"amphibians\">Amphibians</button>-->\n    <!--      <button mat-menu-item [matMenuTriggerFor]=\"reptiles\">Reptiles</button>-->\n    <!--      <button mat-menu-item>Birds</button>-->\n    <!--      <button mat-menu-item>Mammals</button>-->\n    <!--    </mat-menu>-->\n\n    <!--    <mat-menu #invertebrates=\"matMenu\">-->\n    <!--      <button mat-menu-item>Insects</button>-->\n    <!--      <button mat-menu-item>Molluscs</button>-->\n    <!--      <button mat-menu-item>Crustaceans</button>-->\n    <!--      <button mat-menu-item>Corals</button>-->\n    <!--      <button mat-menu-item>Arachnids</button>-->\n    <!--      <button mat-menu-item>Velvet worms</button>-->\n    <!--      <button mat-menu-item>Horseshoe crabs</button>-->\n    <!--    </mat-menu>-->\n\n    <!--    <mat-menu #fish=\"matMenu\">-->\n    <!--      <button mat-menu-item>Baikal oilfish</button>-->\n    <!--      <button mat-menu-item>Bala shark</button>-->\n    <!--      <button mat-menu-item>Ballan wrasse</button>-->\n    <!--      <button mat-menu-item>Bamboo shark</button>-->\n    <!--      <button mat-menu-item>Banded killifish</button>-->\n    <!--    </mat-menu>-->\n\n    <!--    <mat-menu #amphibians=\"matMenu\">-->\n    <!--      <button mat-menu-item>Sonoran desert toad</button>-->\n    <!--      <button mat-menu-item>Western toad</button>-->\n    <!--      <button mat-menu-item>Arroyo toad</button>-->\n    <!--      <button mat-menu-item>Yosemite toad</button>-->\n    <!--    </mat-menu>-->\n\n    <!--    <mat-menu #reptiles=\"matMenu\">-->\n    <!--      <button mat-menu-item>Banded Day Gecko</button>-->\n    <!--      <button mat-menu-item>Banded Gila Monster</button>-->\n    <!--      <button mat-menu-item>Black Tree Monitor</button>-->\n    <!--      <button mat-menu-item>Blue Spiny Lizard</button>-->\n    <!--      <button mat-menu-item disabled>Velociraptor</button>-->\n    <!--    </mat-menu>-->\n\n    <span class=\"example-spacer\"></span>\n\n    <button matTooltip=\"Info about the action\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n      <mat-icon>delete</mat-icon>\n    </button>\n\n    <button matTooltip=\"Info about the action\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n      <mat-icon>verified_user</mat-icon>\n    </button>\n\n    <button matTooltip=\"Info about the action\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item (click)=\"setTheme(DM_THEME_MODE.LIGHT)\">\n        <mat-icon>dialpad</mat-icon>\n        <span>Theme mode light</span>\n      </button>\n      <button mat-menu-item (click)=\"setTheme(DM_THEME_MODE.DARK)\">\n        <mat-icon>dialpad</mat-icon>\n        <span>Theme mode dark</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>dialpad</mat-icon>\n        <span>Redial</span>\n      </button>\n      <button mat-menu-item disabled>\n        <mat-icon>voicemail</mat-icon>\n        <span>Check voice mail</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>notifications_off</mat-icon>\n        <span>Disable alerts</span>\n      </button>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<!--<div class=\"content\">-->\n<!--  <router-outlet></router-outlet>-->\n<!--</div>-->\n\n<mat-sidenav-container\n  class=\"example-sidenav-container mat-typography\">\n  <mat-sidenav\n    class=\"dm-sidenav\"\n    #sidenav\n    [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n    [fixedInViewport]=\"mobileQuery.matches\"\n    [(opened)]=\"opened\"\n    fixedTopGap=\"56\">\n    <mat-nav-list>\n      <a mat-list-item routerLink=\".\" *ngFor=\"let nav of fillerNav\">\n        <mat-icon>dashboard</mat-icon>\n        {{nav}}\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-toolbar>\n      <mat-toolbar-row>\n        <button mat-icon-button (click)=\"sidenav.toggle()\" matTooltip=\"Info about the action\"\n                aria-label=\"Button that displays a tooltip when focused or hovered over\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <span>Second Line</span>\n        <span class=\"example-spacer\"></span>\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div class=\"content\">\n\n      <ng-content></ng-content>\n\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'dm-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css'],\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay(),\n    );\n\n  constructor (private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Link 1</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>first</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { IMessage } from '@dimaha/api-interfaces';\nimport { Subject } from 'rxjs';\nimport io from 'socket.io-client';\n\n@Component({\n  selector: 'dm-palette',\n  templateUrl: './palette.component.html',\n  styleUrls: ['./palette.component.scss'],\n})\nexport class PaletteComponent implements OnInit {\n  hello$ = this.httpClient.get<IMessage>('/api/hello');\n  wsEvents$ = new Subject();\n\n  fillerContent = Array.from({ length: 10 }, () =>\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n       labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n       laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n       voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n       cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`);\n\n  constructor (private httpClient: HttpClient) {\n  }\n\n  ngOnInit (): void {\n    // TODO wrap with rxjs, put to service\n    // TODO make config\n    const socket = io('http://localhost:3333');\n    socket.emit('events', { name: 'Nest' }, (responseMessage) => {\n      console.warn('ws client response:', responseMessage);\n    });\n\n    socket.on('events', (message) => {\n      console.warn('ws client:', message);\n\n      this.wsEvents$.next(message);\n    });\n  }\n}\n","<div>{{ hello$ | async | json }}</div>\n\n<div>{{ wsEvents$ | async }}</div>\n\n<!--      <dm-navigation></dm-navigation>-->\n\n<dm-dashboard></dm-dashboard>\n\n<dm-table class=\"mat-elevation-z4\"></dm-table>\n\n<dm-address-form></dm-address-form>\n\n<dm-tree class=\"mat-elevation-z1\"></dm-tree>\n\n<dm-drag-drop></dm-drag-drop>\n\n<h1>hi</h1>\n\n<section>\n  <div class=\"example-label\">Basic</div>\n  <div class=\"example-button-row\">\n    <button mat-button>Basic</button>\n    <button mat-button color=\"primary\">Primary</button>\n    <button mat-button color=\"accent\">Accent</button>\n    <button mat-button color=\"warn\">Warn</button>\n    <button mat-button disabled>Disabled</button>\n    <a mat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n  </div>\n</section>\n<mat-divider></mat-divider>\n<section>\n  <div class=\"example-label\">Raised</div>\n  <div class=\"example-button-row\">\n    <button mat-raised-button>Basic</button>\n    <button mat-raised-button color=\"primary\">Primary</button>\n    <button mat-raised-button color=\"accent\">Accent</button>\n    <button mat-raised-button color=\"warn\">Warn</button>\n    <button mat-raised-button disabled>Disabled</button>\n    <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n  </div>\n</section>\n<mat-divider></mat-divider>\n<section>\n  <div class=\"example-label\">Stroked</div>\n  <div class=\"example-button-row\">\n    <button mat-stroked-button>Basic</button>\n    <button mat-stroked-button color=\"primary\">Primary</button>\n    <button mat-stroked-button color=\"accent\">Accent</button>\n    <button mat-stroked-button color=\"warn\">Warn</button>\n    <button mat-stroked-button disabled>Disabled</button>\n    <a mat-stroked-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n  </div>\n</section>\n<mat-divider></mat-divider>\n<section>\n  <div class=\"example-label\">Flat</div>\n  <div class=\"example-button-row\">\n    <button mat-flat-button>Basic</button>\n    <button mat-flat-button color=\"primary\">Primary</button>\n    <button mat-flat-button color=\"accent\">Accent</button>\n    <button mat-flat-button color=\"warn\">Warn</button>\n    <button mat-flat-button disabled>Disabled</button>\n    <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n  </div>\n</section>\n<mat-divider></mat-divider>\n<section>\n  <div class=\"example-label\">Icon</div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <button mat-icon-button color=\"primary\" aria-label=\"Example icon button with a home icon\">\n        <mat-icon>home</mat-icon>\n      </button>\n      <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <button mat-icon-button color=\"warn\" aria-label=\"Example icon button with a heart icon\">\n        <mat-icon>favorite</mat-icon>\n      </button>\n      <button mat-icon-button disabled aria-label=\"Example icon button with a open in new tab icon\">\n        <mat-icon>open_in_new</mat-icon>\n      </button>\n    </div>\n  </div>\n</section>\n<mat-divider></mat-divider>\n<section>\n  <div class=\"example-label\">FAB</div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n          <mat-icon>bookmark</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\">\n          <mat-icon>home</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-fab disabled aria-label=\"Example icon button with a heart icon\">\n          <mat-icon>favorite</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<mat-divider></mat-divider>\n\n<section>\n  <div class=\"example-label\">Mini FAB</div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\">\n          <mat-icon>menu</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\">\n          <mat-icon>plus_one</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a filter list icon\">\n          <mat-icon>filter_list</mat-icon>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-mini-fab disabled aria-label=\"Example icon button with a home icon\">\n          <mat-icon>home</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<mat-divider></mat-divider>\n\n<section>\n  <mat-slider min=\"1\" max=\"100\" step=\"1\" value=\"1\"></mat-slider>\n\n  <p>\n    Default appearance:\n    <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n      <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\n      <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\n      <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  </p>\n\n  <p>\n    Legacy appearance:\n    <mat-button-toggle-group appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\">\n      <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\n      <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\n      <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  </p>\n\n</section>\n\n<mat-divider></mat-divider>\n\n<section>\n  CSS\n  <p>\n    <span matBadge=\"4\" matBadgeOverlap=\"false\">Text with a badge</span>\n  </p>\n\n  <p>\n    Button with a badge on the left\n    <button mat-raised-button color=\"primary\"\n            matBadge=\"8\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\n      Action\n    </button>\n  </p>\n\n  <p>\n    Icon with a badge\n    <mat-icon matBadge=\"15\" matBadgeColor=\"warn\">home</mat-icon>\n    <!-- Include text description of the icon's meaning for screen-readers -->\n    <span class=\"cdk-visually-hidden\">\n      Example with a home icon with overlaid badge showing the number 15\n    </span>\n  </p>\n\n</section>\n\n<mat-divider></mat-divider>\n\n<section>\n  <p class=\"text\">{{fillerContent}}</p>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { IProduct } from '@dimaha/api-interfaces';\n\n@Component({\n  selector: 'dm-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent implements OnInit {\n  products$ = this.httpClient.get<IProduct[]>('/api/products');\n\n  constructor (private httpClient: HttpClient) {\n  }\n\n  ngOnInit (): void {\n  }\n\n}\n","<div class=\"products\">\n  <a\n    target=\"_blank\"\n    class=\"product\"\n    [href]=\"product.href\"\n    *ngFor=\"let product of products$ | async\">\n    <div class=\"product__image\">\n      <img [src]=\"product.src\">\n    </div>\n    <div class=\"product__title\" [innerHTML]=\"product.title\"></div>\n    <div class=\"product__price\">{{ product.price | currency }}</div>\n  </a>\n</div>\n","import { Injectable } from '@angular/core';\nimport { combineLatest, BehaviorSubject, Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nexport enum DM_THEME {\n  DEFAULT = 'DEFAULT',\n}\n\nexport enum DM_THEME_MODE {\n  LIGHT = 'LIGHT',\n  DARK  = 'DARK',\n}\n\nexport interface IDmThemeParams {\n  id: DM_THEME;\n  mode: DM_THEME_MODE;\n}\n\nconst DM_THEME_CLASS_PREFIX = 'dm-ui-theme-';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  theme$: Observable<IDmThemeParams>;\n\n  private currentTheme$: BehaviorSubject<DM_THEME>     = new BehaviorSubject<DM_THEME>(DM_THEME.DEFAULT);\n  private currentMode$: BehaviorSubject<DM_THEME_MODE> = new BehaviorSubject<DM_THEME_MODE>(DM_THEME_MODE.LIGHT);\n\n  constructor () {\n    this.theme$ = combineLatest([\n      this.currentTheme$,\n      this.currentMode$,\n    ]).pipe(\n      map(([id, mode]) => ({ id, mode })),\n      shareReplay({\n        bufferSize: 1,\n        refCount: true,\n      }),\n    );\n\n    this.theme$.subscribe(newClassName => {\n      this.applyTheme(newClassName);\n    });\n  }\n\n  setTheme (theme: DM_THEME): void {\n    this.currentTheme$.next(theme);\n  }\n\n  setMode (mode: DM_THEME_MODE): void {\n    this.currentMode$.next(mode);\n  }\n\n  private applyTheme ({ id, mode }: IDmThemeParams) {\n    const newClassName = `${DM_THEME_CLASS_PREFIX}${id}--${mode}`.toLowerCase();\n\n    document.body.classList.forEach(className => {\n      if (className.startsWith(DM_THEME_CLASS_PREFIX)) {\n        document.body.classList.remove(className);\n      }\n    });\n    document.body.classList.add(newClassName);\n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { merge, of as observableOf, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// TODO: Replace this with your own data model type\nexport interface TableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: TableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Table view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class TableDataSource extends DataSource<TableItem> {\n  data: TableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor () {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect (): Observable<TableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange,\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect () {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData (data: TableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData (data: TableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare (a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { TableDataSource, TableItem } from './table-datasource';\n\n@Component({\n  selector: 'dm-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css'],\n})\nexport class TableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<TableItem>;\n  dataSource: TableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit () {\n    this.dataSource = new TableDataSource();\n  }\n\n  ngAfterViewInit () {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n  <!-- Id Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<mat-paginator #paginator\n               [length]=\"dataSource?.data.length\"\n               [pageIndex]=\"0\"\n               [pageSize]=\"6\"\n               [pageSizeOptions]=\"[25, 50, 100, 250]\">\n</mat-paginator>\n","/** Example file/folder data. */\nexport const files = [\n  {\n    name: 'components',\n    type: 'folder',\n    children: [\n      {\n        name: 'src',\n        type: 'folder',\n        children: [\n          {\n            name: 'cdk',\n            type: 'folder',\n            children: [\n              { name: 'package.json', type: 'file' },\n              { name: 'BUILD.bazel', type: 'file' },\n            ],\n          },\n          { name: 'material', type: 'folder' },\n        ],\n      },\n    ],\n  },\n  {\n    name: 'angular',\n    type: 'folder',\n    children: [\n      {\n        name: 'packages',\n        type: 'folder',\n        children: [\n          { name: '.travis.yml', type: 'file' },\n          { name: 'firebase.json', type: 'file' },\n        ],\n      },\n      { name: 'package.json', type: 'file' },\n    ],\n  },\n  {\n    name: 'angularjs',\n    type: 'folder',\n    children: [\n      { name: 'gulpfile.js', type: 'file' },\n      { name: 'README.md', type: 'file' },\n    ],\n  },\n];\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component } from '@angular/core';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { files } from './example-data';\n\n/** File node data with possible child nodes. */\nexport interface FileNode {\n  name: string;\n  type: string;\n  children?: FileNode[];\n}\n\n/**\n * Flattened tree node that has been created from a FileNode through the flattener. Flattened\n * nodes include level index and whether they can be expanded or not.\n */\nexport interface FlatTreeNode {\n  name: string;\n  type: string;\n  level: number;\n  expandable: boolean;\n}\n\n@Component({\n  selector: 'dm-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.css'],\n})\nexport class TreeComponent {\n\n  /** The TreeControl controls the expand/collapse state of tree nodes.  */\n  treeControl: FlatTreeControl<FlatTreeNode>;\n\n  /** The TreeFlattener is used to generate the flat list of items from hierarchical data. */\n  treeFlattener: MatTreeFlattener<FileNode, FlatTreeNode>;\n\n  /** The MatTreeFlatDataSource connects the control and flattener to provide data. */\n  dataSource: MatTreeFlatDataSource<FileNode, FlatTreeNode>;\n\n  constructor () {\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer,\n      this.getLevel,\n      this.isExpandable,\n      this.getChildren);\n\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.dataSource.data = files;\n  }\n\n  /** Transform the data to something the tree can read. */\n  transformer (node: FileNode, level: number) {\n    return {\n      name: node.name,\n      type: node.type,\n      level: level,\n      expandable: !!node.children,\n    };\n  }\n\n  /** Get the level of the node */\n  getLevel (node: FlatTreeNode) {\n    return node.level;\n  }\n\n  /** Get whether the node is expanded or not. */\n  isExpandable (node: FlatTreeNode) {\n    return node.expandable;\n  }\n\n  /** Get whether the node has children or not. */\n  hasChild (index: number, node: FlatTreeNode) {\n    return node.expandable;\n  }\n\n  /** Get the children for the node. */\n  getChildren (node: FileNode): FileNode[] | null | undefined {\n    return node.children;\n  }\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    <mat-icon class=\"type-icon\" [attr.aria-label]=\"node.type + 'icon'\">\n      {{ node.type === 'file' ? 'description' : 'folder' }}\n    </mat-icon>\n    {{node.name}}\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.name\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    <mat-icon class=\"type-icon\" [attr.aria-label]=\"node.type + 'icon'\">\n      {{ node.type ==='file' ? 'description' : 'folder' }}\n    </mat-icon>\n    {{node.name}}\n  </mat-tree-node>\n</mat-tree>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}